---
x-default-logging: &logging
 driver: "fluentd"
 options:
   fluentd-address: "localhost:24224"
   fluentd-async: "true"
   fluentd-retry-wait: 1s
   fluentd-max-retries: 10
services:
  prom-pushgateway:
    image: prom/pushgateway
    ports: 
      - 9091:9091
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib
    restart: unless-stopped
    command: [ "--config=/etc/otel-config.yml" ]
    volumes:
      - ./otel/otel-config.yml:/etc/otel-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "24224:24224"   # Fluentforward receiver
    depends_on:
      - loki
  prometheus-exporter-weather:
    container_name: prometheus-exporter-weather
    build:
      context: ..
      dockerfile: prometheus-exporter-weather/Dockerfile
    env_file: ../prometheus-exporter-weather/locations.env
    ports:
      - 2112:2112
    restart: unless-stopped
    logging: *logging
  logger-speedrun:
    container_name: logger-speedrun
    build:
      context: ..
      dockerfile: logger-speedrun/Dockerfile
    env_file: ../logger-speedrun/leaderboards.env
    restart: on-failure
    logging: *logging
    command: # arguments to entrypoint, emulating cron
    - -nocron
    - '1440' # runs in a loop, sleeping for 1 day (60*24 mins)
volumes:
  prometheus_data:
  loki_data: